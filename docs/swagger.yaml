basePath: /
definitions:
  domain.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  domain.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  domain.LoginResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: 127.0.0.1:8080
info:
  contact:
    email: suporte@abare.com.br
    name: Eng. Gabriel Coelho, Eng. João Vitor, Eng. Samuel Martins | Abaré development
      team
    url: https://abare.com.br
  description: Abaré API is a RESTful API for managing users, diaries, families and
    children related to follow-up programs for the development of children and teenagers
    with autism spectrum disorder.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Abaré API
  version: 0.1.1
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user using their email and password, then returns
        access and refresh tokens for session management.
      operationId: login
      parameters:
      - description: Login Request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/domain.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful login, returns access and refresh tokens
          schema:
            $ref: '#/definitions/domain.LoginResponse'
        "400":
          description: Bad Request - Invalid input
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "401":
          description: Unauthorized - Incorrect email or password
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found - User not found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Login user
      tags:
      - User
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
